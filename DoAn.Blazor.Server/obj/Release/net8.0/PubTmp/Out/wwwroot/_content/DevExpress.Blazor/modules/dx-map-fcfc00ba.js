import{_ as e}from"./_tslib-6e8ca86b.js";import{D as t}from"./devextreme-widget-wrapper-001d177b.js";import{C as s}from"./custom-events-helper-e7f279d3.js";import{e as i}from"./custom-element-267f9a21.js";import"./custom-theme-generator-b2078b57.js";import"./dom-utils-c35907a1.js";import"./dom-da46d023.js";import"./browser-d96520d8.js";import"./common-f853e871.js";import"./css-classes-cee8476c.js";import"./single-slot-element-base-e95e208f.js";import"./data-qa-utils-8be7c726.js";import"./const-90026e45.js";import"./dx-ui-element-0557d3f5.js";import"./lit-element-base-b13b710c.js";import"./dx-license-9ec99b59.js";import"./lit-element-462e7ad3.js";import"./logicaltreehelper-7b19cc30.js";import"./layouthelper-0c7c89da.js";import"./point-e4ec110e.js";import"./constants-791d6f9b.js";import"./property-4ec0b52d.js";const o="dxbl-map";class r extends CustomEvent{constructor(e,t){super(r.eventName,{detail:new n(e,t),bubbles:!0,composed:!0,cancelable:!0})}}r.eventName=o+".click";class a extends CustomEvent{constructor(e){super(a.eventName,{detail:new c(e),bubbles:!0,composed:!0,cancelable:!0})}}a.eventName=o+".marker-click";class n{constructor(e,t){this.Latitude=e,this.Longitude=t}}class c{constructor(e){this.Key=e}}var l,p;s.register(r.eventName,(e=>e.detail)),s.register(a.eventName,(e=>e.detail)),null!==(l=(p=window).sj_evt)&&void 0!==l||(p.sj_evt={fire:()=>{},bind:()=>{}});const d="markerId";let m=class extends t{createWidgetHandlers(){return{...super.createWidgetHandlers(),onClick:e=>this.onMapClick(e),onReady:e=>this.onMapReady(e),onOptionChanged:e=>this.onMapOptionChanged(e)}}getWidgetTypeName(){return"dxMap"}disposeWidget(e){var t;null===(t=null==e?void 0:e._lastAsyncAction)||void 0===t||t.catch((e=>{})),super.disposeWidget(e)}createWidgetDefaultOptions(){return{height:"100%",width:"100%"}}processSpecialOptions(e){super.processSpecialOptions(e),this.preapreMarkerClickHandlers(e.markers)}onMapClick(e){this.dispatchEvent(new r(e.location.lat,e.location.lng))}onMapReady(e){this.changeLoadingPanelVisibility(!1)}onMapOptionChanged(e){this.changeLoadingPanelVisibility(!1)}preapreMarkerClickHandlers(e){null==e||e.forEach((e=>{if(e[d]){const t=e[d];e.onClick=()=>{this.onMarkerClick(t)},delete e[d]}}))}onMarkerClick(e){this.dispatchEvent(new a(e))}};m=e([i("dxbl-map")],m);export{m as DxMap};
